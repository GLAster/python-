['52191004', '1010. 一元多项式求导(25)', '213']
['52234522', '1051. 复数乘法 (15)', '211']
['52234643', '1046. 划拳(15)', '294']
['52237292', '1041. 考试座位号(15)', '235']
['52237395', '1036. 跟奥巴马一起编程(15)', '247']
['52244219', '1031. 查验身份证(15)', '403']
['52244369', '1026. 程序运行时间(15)', '194']
['52244615', '1021. 个位数统计 (15)', '261']
['52244941', '1016. 部分A+B (15)', '202']
['52245188', '1011. A+B和C (15)', '253']
['52290891', '1053. 住房空置率 (20)', '132']
['52291941', '1049. 数列的片段和(20)', '126']
['52293015', '1048. 数字加密(20)', '148']
['52293389', '1047. 编程团体赛(20)', '178']
['52336948', '1043. 输出PATest(20)', '157']
['52337071', '1042. 字符统计(20)', '145']
['52337175', '1039. 到底买不买（20）', '250']
['52337394', '1038. 统计同成绩学生(20)', '102']
['52343594', '1037. 在霍格沃茨找零钱（20）', '128']
['52344401', '1034. 有理数四则运算(20)', '150']
['52346463', '1032. 挖掘机技术哪家强(20)', '145']
['52347059', '1012. 数字分类 (20)', '124']
['52347196', '1013. 数素数 (20)', '188']
['52351145', '1011. World Cup Betting (20)', '121']
['52353425', '1015. Reversible Primes (20)', '109']
['52353933', '1019. General Palindromic Number (20)', '115']
['52354736', '1023. Have Fun with Numbers (20)', '182']
['52356430', '1003. 我要通过！(20)', '356']
['52381811', '1018. 锤子剪刀布 (20)', '239']
['52382059', '1004. 成绩排名 (20)', '227']
['52382454', '1017. A除以B (20)', '193']
['52383790', '1019. 数字黑洞 (20)', '204']
['52383853', '1022. D进制的A+B (20)', '336']
['52384121', '1023. 组个最小数 (20)', '205']
['52385102', '1024. 科学计数法 (20)', '190']
['52385426', '1027. 打印沙漏(20)', '316']
['52386523', '1028. 人口普查(20)', '184']
['52387012', '1014. 福尔摩斯的约会 (20)', '198']
['52387443', '1029. 旧键盘(20)', '255']
['52387796', '1033. 旧键盘打字(20)', '506']
['52413789', '1050. 螺旋矩阵(25)', '145']
['52419192', '1045. 快速排序(25)', '237']
['52421483', '1040. 有几个PAT（25）', '169']
['52422439', '1035. 插入与归并(25)', '216']
['52424698', '1030. 完美数列(25)', '138']
['52440277', '1020. 月饼 (25)', '154']
['52440922', '1005. 继续(3n+1)猜想 (25)', '231']
['52441503', '1015. 德才论 (25)', '226']
['52443464', '1055. 集体照 (25)', '209']
['52447123', '1027. Colors in Mars (20)', '102']
['52447443', '1031. Hello World for U (20)', '106']
['52448614', '1035. Password (20)', '115']
['52489650', '1041. Be Unique (20)', '99']
['52489878', '1042. Shuffling Machine (20)', '95']
['52490119', '1046. Shortest Distance (20)', '104']
['52494063', '1054. The Dominant Color (20)', '112']
['52494074', '1050. String Subtraction (20)', '98']
['52494133', '1058. A+B in Hogwarts (20)', '172']
['52494153', '1061. Dating (20)', '118']
['52495613', '1065. A+B and C (64bit) (20)', '98']
['52496269', '1069. The Black Hole of Numbers (20)', '118']
['52496307', '1073. Scientific Notation (20)', '135']
['52512342', '1056. 组合数的和(15)', '1056']
['52513873', '1060. 爱丁顿数(25)', '592']
['52514259', '1059. C语言竞赛(20)', '241']
['52516106', '1057. 数零壹(20)', '247']
['52602926', '1002. A+B for Polynomials (25)', '201']
['52620618', '坐在马桶上看算法：只有五行的Floyd最短路算法', '191']
['52626818', '坐在马桶上看算法：Dijkstra最短路算法', '208']
['52650063', '1003. Emergency (25)', '245']
['52650527', '1006. Sign In and Sign Out (25)', '169']
['52661699', '1007. Maximum Subsequence Sum (25)', '151']
['52662116', '1009. Product of Polynomials (25)', '174']
['52693840', 'Notepad++配置c/c++环境', '3442']
['52727479', 'sublime text 3配置c/c++编译环境', '248']
['52809434', '1010. Radix (25)', '162']
['52809606', '1012. The Best Rank (25)', '148']
['52812157', '1013. Battle Over Cities (25)', '140']
['52894619', '1016. Phone Bills (25)', '182']
['52895727', '1077. Kuchiguse (20)', '178']
['52922401', 'C++:STL标准入门汇总', '476']
['52923393', 'C语言中文件操作总结', '297']
['52926282', '1017. Queueing at Bank (25)', '367']
['52927854', '前序、中序、后序相互转化的C代码简单递归实现', '493']
['52937664', '1020. Tree Traversals (25)', '181']
['52944258', '1007 DNA Sorting', '121']
['52949588', '1081. Rational Sum (20)', '130']
['52954991', '1004. Counting Leaves (30)', '215']
['52958180', '1021. Deepest Root (25)', '119']
['52964022', '1003.Hangover', '196']
['52965287', '汉诺塔递归C语言代码实现', '1204']
['52972416', '1024. Palindromic Number (25)', '166']
['52975572', '1025. PAT Ranking (25)', '182']
['52975712', '1028. List Sorting (25)', '208']
['52984310', '1032. Sharing (25)', '143']
['52988177', '线性表之&lt;顺序表sqlist&gt;的储存及插入、删除-C代码实现', '238']
['52988182', '线性表之&lt;链表linklist&gt;的储存及插入、删除-C代码实现', '208']
['52996342', '1029. Median (25)', '207']
['52999612', '1036. Boys vs Girls (25)', '125']
['53000813', '1037. Magic Coupon (25)', '143']
['53021458', '1039. Course List for Student (25)', '139']
['53024750', '1040. Longest Symmetric String (25)', '136']
['53039332', '1043. Is It a Binary Search Tree (25)', '276']
['53044108', '1044. Shopping in Mars (25)', '137']
['53044851', '1047. Student List for Course (25)', '137']
['53044986', '1048. Find Coins (25)', '145']
['53045253', '1051. Pop Sequence (25)', '178']
['53048622', '排序算法之冒泡排序&lt;Bubble_Sort&gt;及其C语言代码实现', '2142']
['53052933', '排序算法之插入排序&lt;Insertion_Sort&gt;及其C语言代码实现', '2330']
['53053069', '排序算法之希尔排序&lt;Shell_Sort&gt;及其C语言代码实现', '3035']
['53053141', '排序算法之选择排序&lt;Selection_Sort&gt;及其C语言代码实现', '2129']
['53053311', '1055. The World&#39;s Richest (25)', '161']
['53099682', '1059. Prime Factors (25)', '136']
['53105395', '1056. Mice and Rice (25)', '172']
['53141762', '1084. Broken Keyboard (20)', '124']
['53141782', '1092. To Buy or Not to Buy (20)', '135']
['53158092', '1100. Mars Numbers (20)', '305']
['53159495', '1096. Consecutive Factors (20)', '168']
['53159980', '1093. Count PAT&#39;s (25)', '156']
['53160052', '1104. Sum of Number Segments (20)', '166']
['53171029', '1060. Are They Equal (25)', '210']
['53171171', '1062. Talent and Virtue (25)', '168']
['53203236', '1063. Set Similarity (25)', '195']
['53206460', '1067. Sort with Swap(0,*) (25)', '170']
['53221823', '1014. Waiting in Line (30)', '237']
['53240497', '1018. Public Bike Management (30)', '461']
['53337922', 'C语言字符串函数总结（部分常见字符串函数）', '190']
['53339470', '1022. Digital Library (30)', '126']
['53355396', '1058. 选择题(20)', '278']
['53356486', '1054. 求平均值 (20)', '190']
['53359608', '1052. 卖个萌 (20)', '208']
['53359753', '1044. 火星数字(20)', '361']
['53364319', '1026. Table Tennis (30)', '127']
['53375999', 'C语言函数传递指针参数的问题', '8085']
['53379284', '1025. 反转链表 (25)', '268']
['53400750', '1097. Deduplication on a Linked List (25)', '166']
['53401927', '1090. Highest Price in Supply Chain (25)', '115']
['53402122', '1083. List Grades (25)', '94']
['53402255', '1074. Reversing Linked List (25)', '83']
['53402720', '1094. The Largest Generation (25)', '127']
['53403961', '1078. Hashing (25)', '131']
['53410786', '1099. Build A Binary Search Tree (30)', '85']
['53412048', '1064. Complete Binary Search Tree (30)', '107']
['53420527', '1086. Tree Traversals Again (25)', '123']
['53423438', '1085. Perfect Sequence (25)', '95']
['53440500', '1087. All Roads Lead to Rome (30)', '132']
['53442613', '1030. Travel Plan (30)', '125']
['53446735', '1009. 说反话 (20)', '153']
['53446789', '1008. 数组元素循环右移问题 (20)', '163']
['53446909', '1007. 素数对猜想 (20)', '188']
['53446921', '1006. 换个格式输出整数 (15)', '217']
['53446975', '1002. 写出这个数 (20)', '269']
['53447022', '1001. 害死人不偿命的(3n+1)猜想 (15)', '216']
['53543719', '1057. Stack (30)', '100']
['53556434', '1075. PAT Judge (25)', '115']
['53560446', '1061. 判断题(15)', '522']
['53560455', '1063. 计算谱半径(20)', '485']
['53560495', '1064. 朋友数(20)', '373']
['53560528', '1065. 单身狗(25)', '905']
['53561589', '1062. 最简分数(20)', '737']
['53574488', '1120. Friend Numbers (20)', '123']
['53574494', '1121. Damn Single (25)', '278']
['53574847', '1122. Hamiltonian Cycle (25)', '203']
['53605990', '1123. Is It a Complete AVL Tree (30)', '196']
['53606069', 'AVL树的旋转、插入、删除及遍历C语言实现', '432']
['53608184', '1066. Root of AVL Tree (25)', '144']
['53726869', '1116. Come on! Let&#39;s C (20)', '117']
['53741543', '1108. Finding Average (20)', '136']
['53785817', '1110. Complete Binary Tree (25)', '112']
['53786749', '1102. Invert a Binary Tree (25)', '122']
['54024618', '1089. Insert or Merge (25)', '110']
['54171921', '1098. Insertion or Heap Sort (25)', '118']
['54707307', '排序算法之堆排序&lt;Heap_Sort&gt;及其C语言代码实现', '1165']
['54744140', '1118. Birds in Forest (25)', '88']
['54744167', '并查集', '103']
['54744232', '排序算法之归并排序&lt;Merge_Sort&gt;及其C语言代码实现', '2078']
['54744260', '1117. Eddington Number(25)', '147']
['54766620', '1113. Integer Set Partition (25)', '125']
['54766761', '1101. Quick Sort (25)', '70']
['54766830', '1106. Lowest Price in Supply Chain (25)', '83']
['54773941', '1114. Family Property (25)', '144']
['54775147', 'C++ sort()函数和C qsort()函数用法总结', '416']
['54782490', '1112. Stucked Keyboard (20)', '111']
['54782802', '1079. Total Sales of Supply Chain (25)', '187']
['54782990', '1082. Read Number in Chinese (25)', '174']
['54803697', '1071. Speech Patterns (25)', '94']
['54837633', '1033. To Fill or Not to Fill (25)', '144']
['54861294', '1034. Head of a Gang (30)', '74']
['54862043', '1038. Recover the Smallest Number (30)', '81']
['54863186', '1049. Counting Ones (30)', '128']
['54863704', '1053. Path of Equal Weight (30)', '123']
['54863852', '1045. Favorite Color Stripe (30)', '67']
['54865458', '1068. Find More Coins (30)', '160']
['54880481', '1072. Gas Station (30)', '95']
['54880722', '1076. Forwards on Weibo (30)', '78']
['54892424', '1080. Graduate Admission (30)', '57']
['54893672', '1091. Acute Stroke (30)', '108']
['54925303', '1095. Cars on Campus (30)', '194']
['54943392', 'jQuery富文本编辑器Notebook', '383']
['55657665', '1103. Integer Factorization (30)', '131']
['55659361', '1107. Social Clusters (30)', '88']
['56668569', '1115. Counting Nodes in a BST (30)', '146']
['60466289', 'ajax传值到ASP.NET的aspx文件后台代码实现（VB）', '1035']
['60466329', 'ajax前台js代码实现', '310']
['60466369', 'ajax实现关注/取消关注', '419']
['60479008', '1068. 万绿丛中一点红(20)', '1147']
['60479641', '1067. 试密码(20)', '559']
['60480110', '1070. 结绳(25)', '294']
['60585058', '1069. 微博转发抽奖(20)', '230']
['60594601', '1066. 图像过滤(15)', '150']
['60598622', '1126. Eulerian Path (25)', '97']
['60876950', 'bootstrap去掉表格边框', '4369']
['61208967', 'echart实现ajax动态数据加载(前台js代码)', '2235']
['65448419', 'C#判断是否有中文', '179']
['69321217', 'Bootstrap表格内容垂直水平居中', '970']
['70306331', '1128. N Queens Puzzle (20)', '130']
['70809641', '1129. Recommendation System (25)', '128']
['70821074', '1130. Infix Expression (25)', '220']
['71151225', '1119. Pre- and Post-order Traversals (30)', '158']
['71156701', '1127. ZigZagging on a Tree (30)', '196']
['71172848', '1131. Subway Map (30)', '529']
['71189933', 'hexo sever端口占用，localhost:4000无响应', '594']
['71190012', 'hexo 写博客+部分常用markdown语法', '217']
['71190385', 'hexo本地和github不一致', '474']
['71237345', '1111. Online Map (30)', '258']
['72084014', 'A1091. 组合输出', '108']
['72783210', '已知前序、中序，递归建立二叉树（C语言）', '235']
['72783308', '求二叉树的高度', '136']
['72783538', '二叉树前序、中序、后序非递归遍历实现（C语言）', '959']
['72783664', '二叉树前序、中序、后序递归遍历实现（C语言）', '152']
['72793377', '一些有趣的算法题收集-Category', '109']
['72793395', '查找一个数组中第k小的数', '114']
['72793626', '排序算法之快速排序&lt;Quick_Sort&gt;及其C语言代码实现', '483']
['73658251', 'VS Code编译支持C++11问题', '185']
['75276194', 'A1153. 入学考试', '210']
['75286271', 'A1156. 开心的金明', '205']
['75615242', 'Windows桌面右键新建未出现word/excel/ppt解决办法', '872']
['76065316', 'Excel无法打开文件xxx.xlsx，因为文件格式或文件扩展名无效。请确定文件未损坏，并且文件扩展名与文件的格式匹配', '10484']
['76825172', '移去链表倒数第n个节点', '97']
['76829958', '合并两个有序链表，递归实现', '113']
['76832777', '合并k个有序链表', '164']
['76855151', 'mathematica抓取网页', '300']
['76855627', '1125. Chain the Ropes (25)', '69']
['76855959', '1124. Raffle for Weibo Followers (20)', '65']
['76861156', '1109. Group Photo (25)', '74']
['76867718', '1105. Spiral Matrix (25)', '83']
['77160868', '34. Search for a Range', '66']
['77163910', '将有序单链表转化为平衡二叉树', '78']
['77323660', '[LeetCode] 4.Median of Two Sorted Arrays', '69']
['77359705', 'you-get 使用总结', '475']
['77462338', '201512-4 送货 ccf', '171']
['77478981', '强连通分量 tarjan算法 C++实现', '191']
['77479191', '201509-4 高速公路 ccf', '135']
['77480735', '201412-4 最优灌溉 ccf', '97']
['77487914', '最小生成树 prim算法 C++实现', '204']
['77488282', '最小生成树 kruskal算法 C++实现', '284']
['77488692', '201703-4 地铁修建 ccf', '212']
['77533161', 'Huffman编码压缩和解压文档，C++实现', '195']
['77618943', '数列最大连续子数组和', '68']
['77714768', '[LeetCode] 560. Subarray Sum Equals K', '61']
['77744615', '[LeetCode] 39. Combination Sum', '56']
['77745495', '[LeetCode] 650. 2 Keys Keyboard', '91']
['77757412', '[LeetCode] 40. Combination Sum II', '64']
['77758216', '[LeetCode] 442. Find All Duplicates in an Array', '56']
['77759505', '[LeetCode] 1. Two Sum', '64']
['77801547', '[LeetCode] 637. Average of Levels in Binary Tree', '95']
['77802238', '[LeetCode] 543. Diameter of Binary Tree', '75']
['77802652', '[LeetCode] 107. Binary Tree Level Order Traversal II', '58']
['77802884', '[LeetCode] 662. Maximum Width of Binary Tree', '182']
['77802951', '[LeetCode] 103. Binary Tree Zigzag Level Order Traversal', '69']
['77804880', 'n皇后问题—回溯法 C++实现', '188']
['77816857', '[LeetCode] 78. Subsets', '85']
['77817063', '[LeetCode] 526. Beautiful Arrangement', '71']
['77817529', '[LeetCode] 22. Generate Parentheses', '77']
['77848965', 'C++ 11 Lambda表达式', '148']
['77850572', '[LeetCode] 547. Friend Circles', '82']
['77897890', 'trie树（字典树）实现 C++', '91']
['77931415', '[LeetCode] 143. Reorder List', '82']
['78013955', '1135. Is It A Red-Black Tree (30)', '251']
['78014286', '1134. Vertex Cover (25)', '90']
['78047548', '1071. 小赌怡情(15)', '87']
['78047734', '1072. 开学寄语(20)', '116']
['78050777', '1073. 多选题常见计分法(20)', '467']
['78050813', '1074. 宇宙无敌加法器(20)', '407']
['78050875', '1075. 链表元素分类(25)', '260']
['78050948', '1133. Splitting A Linked List (25)', '111']
['78050958', '1132. Cut Integer (20)', '83']
['78062494', '1001. A+B Format (20)', '172']
['78062570', '1005. Spell It Right (20)', '70']
['78062793', '1052. Linked List Sorting (25)', '62']
['78066530', '1008. Elevator (20)', '69']
['78066610', ' PAT乙级解题报告索引', '510']
['78066610', ' PAT乙级解题报告索引', '510']
['78066840', '1070. Mooncake (25)', '83']
['78067677', '1088. Rational Arithmetic (20)', '57']
['78067841', ' PAT甲级解题报告索引', '568']
['78067841', ' PAT甲级解题报告索引', '568']
['78070137', '1007. Maximum Subsequence Sum (25)', '127']
['78072669', 'C++ iter_swap()', '52']
['78072719', 'C++ reverse', '322']
['78072901', 'C++ 反转字符串', '76']
['78114497', 'stdc++.h', '98']
['78124262', 'Mathematica 获取豆瓣图书top250，正则表达式', '102']
['78125059', 'mathematica StringCases和StringReplace，Regex', '55']
['78126338', '正则表达式全部符号解释', '75']
['78126894', '将C++代码转化为高亮的html代码', '80']
['78149363', '1048. 数字加密(20)', '61']
['78150499', '1044. 火星数字(20)', '53']
['78207851', '欢迎使用Markdown编辑器写博客', '51']
['78208634', 'sublime配置编译C/C++', '58']
['78230107', 'Ubuntu终端名称修改', '55']
['78230157', 'Ubuntu移动启动器', '73']
['78230186', 'Ubuntu查看应用', '53']
['78230564', 'Win10安装Ubuntu双系统', '168']
['78232690', '201709-4 通信网络 ccf', '1548']
['78232825', '201709-1 打酱油 ccf', '591']
['78233996', '201709-2 公共钥匙盒 ccf', '1652']
['78240006', '线段树的建立、查询、更新及应用', '72']
['78241965', '有关线段树的一些性质探讨（完全、平衡）', '85']
['78243098', '线段树开4N空间证明', '130']
['78245459', '201703-3 Markdown ccf', '190']
['78254933', '树状数组', '76']
['78269355', '201703-1 分蛋糕 ccf', '133']
['78269806', '201703-2 学生排队 ccf', '53']
['78277172', '201709-3 JSON查询 ccf', '636']
['78277320', '201312-1 出现次数最多的数 ccf', '58']
['78277603', '201312-2 ISBN号码 ccf', '65']
['78278236', '201312-3 最大的矩形 ccf', '127']
['78359480', '201709-5 除法 ccf', '1231']
['78362816', '201612-2 工资计算 ccf', '59']
['78365273', '201612-3 权限查询 ccf', '96']
['78366826', '201612-4 压缩编码 ccf', '76']
['78370342', '201609-3 炉石传说 ccf', '103']
['78430670', 'sublime python配置', '58']
['78445153', '201604-1 折点计数 ccf', '39']
['78445368', '201604-2 俄罗斯方块 ccf', '68']
['78469938', 'Failed building wheel for uwsgi', '126']
['78573763', '201403-1 相反数 ccf', '46']
['78573800', '201409-1 相邻数对 ccf', '35']
['78573822', '201412-1 门禁系统 ccf', '44']
['78573872', '201503-1 图像旋转 ccf', '35']
['78573902', '201509-1 数列分段 ccf', '37']
['78573997', '201403-2 窗口 ccf', '64']
['78574326', '201409-2 画图 ccf', '33']
['78574450', '201412-2 Z字形扫描 ccf', '44']
['78574534', '201503-2 数字排序 ccf', '62']
['78574670', '201509-2 日期计算 ccf', '59']
['78580183', '201512-2 消除类游戏 ccf', '60']
['78580202', '201403-3 命令行选项 ccf', '56']
['78580214', '201409-3 字符串匹配 ccf', '62']
['78585740', '201503-3 节日 ccf', '55']
['78586454', '201509-3 模板生成系统 ccf', '83']
['78587635', '201512-3 画图 ccf', '61']
['78591603', '201412-3 集合竞价 ccf', '76']
['78737053', '201604-4 游戏 ccf', '37']
['78816363', '1139. First Contact (30)', '91']
['78816572', '1138. Postorder Traversal (25)', '92']
['78821588', '1137. Final Grading (25)', '83']
['78821820', '1136. A Delayed Palindrome (20)', '69']
['78822167', '1080. MOOC期终成绩 (25)', '232']
['78822188', '1079. 延迟的回文数 (20)', '87']
['78822201', '1078. 字符串压缩与解压 (20)', '72']
['78822205', '1077. 互评成绩计算 (20)', '87']
['78822219', '1076. Wifi密码 (15)', '79']
['79050636', '201712-1 最小差值 ccf', '43']
['79050642', '201712-2 游戏 ccf', '58']
['79057666', '201712-3 Crontab ccf', '49']
['79060030', '201712-4 行车路线 ccf(90分)', '63']
['79112507', ' CCF CSP解题报告索引', '12']
['79112796', '201612-1 中间数 ccf', '6']
['79112845', '201609-1 最大波动 ccf', '10']
['79113124', '201609-2 火车购票 ccf', '2']
['79113163', '201512-1 数位之和 ccf', '2']
